<?php
// global categories array
function categories_global() {
    global $categories_embl;
    $categories_embl = 'science,lab-matters,events,alumni';
}
add_action( 'init', 'categories_global' );

// global languages array
function languages_global() {
    global $excluded_translations_array;
    $excluded_translations = get_posts(array(
        'numberposts'   => -1,
        'post_type'     => 'post',
        'meta_query'    => array(
          'relation' => 'OR',
          array(
              'key'       => 'select_translations',
              'value'     => 'french',
              'compare' => 'LIKE'
          ),
          array(
              'key'       => 'select_translations',
              'value'     => 'italian',
              'compare' => 'LIKE'
          ),
          array(
              'key'       => 'select_translations',
              'value'     => 'catalan',
              'compare' => 'LIKE'
          ),
          array(
              'key'       => 'select_translations',
              'value'     => 'spanish',
              'compare' => 'LIKE'
          ),
          array(
              'key'       => 'select_translations',
              'value'     => 'german',
              'compare' => 'LIKE'
      
          )
      ) 
      ));
    $excluded_translations_array = array_column($excluded_translations, 'ID');
      
}
add_action( 'init', 'languages_global' );

/* Adds scripts */
add_action( 'wp_enqueue_scripts', 'add_scripts' );
function add_scripts() {
    wp_enqueue_script('jplist', get_theme_file_uri( '/scripts/jplist.min.js'));
}
// Replacing factoid boxes in old articles

function factoid_function( $atts, $content = null ) {
$content = str_replace('<p', '<p class="vf-box__text"', $content);
$content = str_replace('<h2', '<h2 class="vf-box__heading"', $content);
    return '<div class="vf-box vf-box--normal vf-box-theme--primary">' .  $content . '</div>';
}

add_shortcode('fact-box', 'factoid_function');

// removes empty <p> in factoid box

add_filter('the_content', 'remove_empty_p', 20, 1);
function remove_empty_p($content){
    $content = force_balance_tags($content);
    return preg_replace('#<p>\s*+(<br\s*/*>)?\s*</p>#i', '', $content);
}

// Expose user email id in user api
// https://gitlab.ebi.ac.uk/emblorg/backlog/-/issues/585
register_rest_field( 'user', 'user_email',
    array(
        'get_callback'    => function ( $user ) {
            //return $user['email'];
         return get_userdata($user['id'])->user_email;
        },
        'update_callback' => null,
        'schema'          => null,
    )
);


// CHILD THEME CSS FILE

add_action( 'wp_enqueue_scripts', 'my_theme_enqueue_styles' );
function my_theme_enqueue_styles() {
	
	$parent_style = 'parent-style'; 
	
    wp_enqueue_style( $parent_style, get_template_directory_uri() . '/style.css' );
    wp_enqueue_style( 'child-style',
	get_stylesheet_directory_uri() . '/style.css',
	array( $parent_style ),
	wp_get_theme()->get('Version')
);
}

/**
 * Load ACF JSON from theme
 */
add_filter(
	'acf/settings/load_json',
	'vf_wp_news__acf_settings_load_json',
	1
  );

function vf_wp_news__acf_settings_load_json($paths) {
    $paths[] = get_stylesheet_directory() . '/acf-json';
    return $paths;
  }



// POST THUMBNAILS
// 
add_theme_support( 'post-thumbnails' );
add_theme_support( 'title-tag' );

// REMOVES CUSTOM IMAGE SIZES

function remove_extra_image_sizes() {
	foreach ( get_intermediate_image_sizes() as $size ) {
		if ( !in_array( $size, array( 'thumbnail', 'medium', 'medium_large', 'large' ) ) ) {
			remove_image_size( $size );
		}
	}
}
 
add_action('init', 'remove_extra_image_sizes');


//Adding vf-list__item class to a list generated by Wordpress

add_filter('wp_list_categories', 'add_vf_class_wp_list_categories');
function add_vf_class_wp_list_categories($list) {

    $cats = get_categories('hide_empty=0');
    foreach($cats as $cat) {
        $find = 'cat-item-' . $cat->term_id . '"';
        $replace = 'vf-list__item' . '"';
        $list = str_replace( $find, $replace, $list );
        $find = 'cat-item';
        $replace = 'vf-list__item' . '"';
        $list = str_replace( $find, $replace, $list );
    }

    return $list;
}

add_filter('wp_list_categories', 'addClassToLinks');
function addClassToLinks($content){
	$class_to_add = 'vf-list__link';

    return str_replace( '<a href="',  '<a class="'. $class_to_add. '" href="', $content);
}


// POPULAR POSTS 

function popular_posts($post_id) {
	$count_key = 'popular_posts';
	$count = get_post_meta($post_id, $count_key, true);
	if ($count == '') {
		$count = 0;
		delete_post_meta($post_id, $count_key);
		add_post_meta($post_id, $count_key, '0');
	} else {
		$count++;
		update_post_meta($post_id, $count_key, $count);
	}
}

function track_posts($post_id) {
	if (!is_single()) return;
	if (empty($post_id)) {
		global $post;
		$post_id = $post->ID;
	}
	popular_posts($post_id);
}
add_action('wp_head', 'track_posts');



//ADDING CLASS TO A LINK IN CATEGORY
//
function replace_category_class( $thelist, $separator, $parents){
    $class_to_add = 'vf-link';
    return str_replace('<a href="',  '<a class="'. $class_to_add. '"style="color: #707372;" href="', $thelist);
}

add_filter('the_category', __NAMESPACE__ . '\\replace_category_class',10,3);


 // MAGAZINE COVER WIDGET 1
function mag1_widgets_init() {

	register_sidebar( array(
		'name'          => 'Magazine cover right',
		'id'            => 'magazine_cover_1',
		'before_widget' => '<div>',
		'after_widget'  => '</div>',
		'before_title'  => '<h2>',
		'after_title'   => '</h2>',
	) );

}
add_action( 'widgets_init', 'mag1_widgets_init' );

// MAGAZINE COVER WIDGET 2
function mag2_widgets_init() {

	register_sidebar( array(
		'name'          => 'Magazine cover left',
		'id'            => 'magazine_cover_2',
		'before_widget' => '<div>',
		'after_widget'  => '</div>',
		'before_title'  => '<h2>',
		'after_title'   => '</h2>',
	) );

}
add_action( 'widgets_init', 'mag2_widgets_init' );

 // TOPICS WIDGET 1
 function top1_widgets_init() {

	register_sidebar( array(
		'name'          => 'Topics left',
		'id'            => 'topics_left',
		'before_widget' => '<div>',
		'after_widget'  => '</div>',
		'before_title'  => '',
		'after_title'   => '',
	) );

}
add_action( 'widgets_init', 'top1_widgets_init' );

 // TOPICS WIDGET 2
 function top2_widgets_init() {

	register_sidebar( array(
		'name'          => 'Topics right',
		'id'            => 'topics_right',
		'before_widget' => '<div>',
		'after_widget'  => '</div>',
		'before_title'  => '',
		'after_title'   => '',
	) );

}
add_action( 'widgets_init', 'top2_widgets_init' );

// REMOVE LIST FROM CATEGORY

foreach((get_the_category()) as $category) { 
    echo $category->category_nicename . ' '; 
    echo get_category_link($category->cat_ID);;
} 

// DISPLAY CUSTOM FIELDS IN THE MENU

add_filter('acf/settings/remove_wp_meta_box', '__return_false');

add_filter('acf/settings/show_admin', '__return_true');
function my_acf_save_post( $post_id ) {
  // get new value
  $user = get_field( 'author', $post_id );
  if( $user ) {
    wp_update_post( array( 'ID'=>$post_id, 'post_author'=>$user['ID']) );
  }
}
add_action('acf/save_post', 'my_acf_save_post', 25);



/**
 * Function to trigger EBI News build process on post publish|save
 * @param $post_id
 * @see https://gitlab.ebi.ac.uk/emblorg/backlog/-/issues/652
 */
function trigger_ebi_news_build_process($post_id) {
  $slug = 'post';
  if ( $slug != $_POST['post_type'] ) {
    return;
  }

  if ((strpos($_SERVER['SERVER_NAME'], "wwwdev") !== false) || (strpos($_SERVER['SERVER_NAME'], "localhost") !== false)){
    $branch_ref = "develop";
  }
  else {
    $branch_ref = "master";
  }

  $display = get_field('field_target_display', $post_id);
  // CHeck if display is ebi or both
  if ($display == 'embl-ebi' || $display == 'both') {
    // Trigger CI build to update EBI news
    $updated_post_id = "emblorg-" . $post_id;
    $response = wp_remote_post( 'https://gitlab.ebi.ac.uk/api/v4/projects/3488/trigger/pipeline', array("body" => array(
        'token' => '7ee8e6f2bb44cf9a094a7a66e6b9a3',
        'ref' => $branch_ref,
        'variables[FETCH_NEWS]' => 'INCREMENTAL',
        'variables[UPDATED_NEWS_ID]' => $updated_post_id
    )));
    if ( is_wp_error( $response ) ) {
      $error_message = $response->get_error_message();
      echo "Something went wrong with CI trigger: $error_message";
    }
  }
}
add_action( 'save_post', 'trigger_ebi_news_build_process' );



// ARCHIVES PAGE
add_action( 'init', 'create_post_type' );
function create_post_type() {
    register_post_type( 'archives',
        array(
            'labels' => array(
                'name' => __( 'archives' ),
                'singular_name' => __( 'archives' )
            ),
        'public' => true,
        'has_archive' => true,
        )
    );
}
// CUSTOM ACF COLOR PICKER SWATCHES

function my_acf_collor_pallete_script() {
    ?>
    <script type="text/javascript">
    (function($){
        
        acf.add_filter('color_picker_args', function( args, $field ){

            args.palettes = ['#007B53', '#54585A','#A6093D','#193F90','#563D82','#B65417']
            
            console.log(args);

            return args;
        });
        
    })(jQuery);
    </script>
    <?php
}

add_action('acf/input/admin_footer', 'my_acf_collor_pallete_script');

function my_acf_collor_pallete_css() {
    ?>
    <style>
		
		
        .acf-color_picker .iris-picker .iris-border {
            width: 200px !important;
            height: 10px !important;
        }
        .acf-color_picker .wp-picker-input-wrap,
        .acf-color_picker .iris-picker .iris-slider,
        .acf-color_picker .iris-picker .iris-square {
            display:none !important;
        }
    </style>
    <?php
}

add_action('acf/input/admin_head', 'my_acf_collor_pallete_css');

// Remove Yoast SEO Prev/Next URL from all pages

add_filter( 'wpseo_next_rel_link', '__return_false' );
add_filter( 'wpseo_prev_rel_link', '__return_false' );

// Prepends WordPress RSS feed content with the featured image

add_filter('the_content', 'featured_image_in_rss_feed');
function featured_image_in_rss_feed( $content ) {
 global $post;
 if( is_feed() ) {
 if ( has_post_thumbnail( $post->ID ) ){
 $prepend = '<div>' . get_the_post_thumbnail( $post->ID, 'medium', array( 'style' => 'margin-bottom: 10px;' ) ) . '</div>';
 $content = $prepend . $content;
 }
 }
 return $content;
}

  /**
   * Add metadata to REST API
   */

  function register_display_api_field()
{
    register_rest_field('post', 'field_target_display',
        array(
            'get_callback' => 'get_display_api_field',
            'schema' => null,
        )
    );
}

add_action('rest_api_init', 'register_display_api_field');

function get_display_api_field($post)
{
    return get_field('field_target_display', $post['id']);
}

// Add featured image to REST API
add_action('rest_api_init', 'register_rest_images' );
function register_rest_images(){
    register_rest_field( array('post'),
        'fimg_url',
        array(
            'get_callback'    => 'get_rest_featured_image',
            'update_callback' => null,
            'schema'          => null,
        )
    );
}
function get_rest_featured_image( $object, $field_name, $request ) {
    if( $object['featured_media'] ){
        $img = wp_get_attachment_image_src( $object['featured_media'], 'app-thumb' );
        return $img[0];
    }
    return false;
}

// Allows to prioritse ACF image field over a Gravatar profile

add_filter('get_avatar', 'custom_profile_avatar', 10, 5);
function custom_profile_avatar( $avatar, $id_or_email, $size, $default, $alt ) {

    $user = '';
    
    // Get user by id or email
    if ( is_numeric( $id_or_email ) ) {
        $id   = (int) $id_or_email;
        $user = get_user_by( 'id' , $id );

    } elseif ( is_object( $id_or_email ) ) {
        if ( ! empty( $id_or_email->user_id ) ) {
            $id   = (int) $id_or_email->user_id;
            $user = get_user_by( 'id' , $id );
        }
    } else {
        $user = get_user_by( 'email', $id_or_email );
    }
    if ( ! $user ) {
        return $avatar;
    }

    // Get the user id
    $user_id = $user->ID;

    // Get the file id
    $image_id = get_user_meta($user_id, 'vf_wp_avatar_image', true); // CHANGE TO YOUR FIELD NAME

    // Bail if we don't have a local avatar
    if ( ! $image_id ) {
        return $avatar;
    }

    // Get the file size
    $image_url  = wp_get_attachment_image_src( $image_id, 'thumbnail' ); // Set image size by name
    // Get the file url
    $avatar_url = $image_url[0];
    // Get the img markup
    $avatar = '<img alt="' . $alt . '" src="' . $avatar_url . '" class="vf-author--avatar' . '" height="' . $size . '" width="' . $size . '"/>';
    // Return our new avatar
    return $avatar;
}


/// YOAST SEO overwrite canonical url for EBI news

function ebi_news_canonical_url( $canonical ) {
    global $post;
    $display = get_field('field_target_display', $post->ID);
    $category = get_the_category($post->ID);
    $cat_slug = '';
    if (!empty($category[0]->slug)) {
        $cat_slug = $category[0]->slug;
      }
  if ( (is_single()) && ($display == 'embl-ebi') ) {
      $canonical = 'https://www.ebi.ac.uk/about/news/'. strtolower($cat_slug) . '/' . $post->post_name;
    }
  
    return $canonical;
  }
  
  add_filter( 'wpseo_canonical', 'ebi_news_canonical_url', 20 );

  
  function ebi_news_opengraph_url( $url ) {
      global $post;
      $display = get_field('field_target_display', $post->ID);
      $category = get_the_category($post->ID);
      $cat_slug = '';
      if (!empty($category[0]->slug)) {
          $cat_slug = $category[0]->slug;
        }
      if ( (is_single()) && ($display == 'embl-ebi') ) {
          $url = 'https://www.ebi.ac.uk/about/news/'. strtolower($cat_slug) . '/' . $post->post_name;
        }
        
        return $url;
  }

    add_filter( 'wpseo_opengraph_url', 'ebi_news_opengraph_url' );


/*
 * Redirect posts to EMBL-EBI URL
 */

add_action( 'template_redirect', 'redirect_to_ebi' );
function redirect_to_ebi(){
    global $post;
    $display = get_field('field_target_display', $post->ID);
    $category = get_the_category($post->ID);
    $cat_slug = '';
    if (!empty($category[0]->slug)) {
        $cat_slug = $category[0]->slug;
      }
    $redirect = 'https://www.ebi.ac.uk/about/news/'. strtolower($cat_slug) . '/' . trim($post->post_name, '-2');
    if ((is_single()) && ($display == 'embl-ebi')) {
        wp_redirect( $redirect );
     }
}  


  
add_filter( 'get_archives_link', function( $link_html, $url, $text, $format, $before, $after ) {

    if ( 'custom' == $format ) {
        $link_html = "\t<option value=\"". esc_attr( $text ) ."\" data-path=\".a". esc_attr( $text ) ."\">$before $text $after</option>\n";
    }

    return $link_html;

}, 10, 6 );


 // custom language switcher for the WPML plugin
 if ( function_exists( 'icl_object_id' ) ) {
 function languages_links_switcher(){
    $languages = icl_get_languages('skip_missing=1');
    if(1 < count($languages)){ echo __(' <div class="vf-banner vf-banner--alert vf-banner--info | vf-u-margin__bottom--200">
      <div class="vf-banner__content">
        <style>
          .vf-banner__content p {
            font-size: 16px !important;
            margin: 0px !important;
          }
        </style>
        <p class="vf-banner__text">This article is also available in ');
    
          foreach($languages as $l){
          if(!$l['active']) $langs[] = '<a href="'.$l['url'].'"><img class="wpml-ls-flag iclflag" src="' . $l['country_flag_url'].'" />&nbsp;' .$l['native_name'].'</a>';
          }
          echo join(' and ', array_filter(array_merge(array(join(', ', array_slice($langs, 0, -1))), array_slice($langs,
          -1)), 'strlen'));
    
          echo __('
        </p>
      </div>
      </div>' );
    
      }
      }
      
    
      // Show linked WPML posts in a loop
    function wpml_post_languages_in_loop() {
        $home_url = get_home_url();

      $thispostid = get_the_ID();
      $post_trid = apply_filters('wpml_element_trid', NULL, get_the_ID(), 'post_' . get_post_type());
      $languages = apply_filters( 'wpml_active_languages', NULL, 'skip_missing=0&orderby=code' );
      if (empty($post_trid))
          return;
      $translation = apply_filters('wpml_get_element_translations', NULL, $post_trid, 'post_' . get_post_type());
      if (1 < count($translation)) {
        echo '<p class="vf-summary__meta">';
          foreach ($translation as $l) {
              if ($l->element_id != $thispostid) {
                  $langs[] = '<a href="' . apply_filters('wpml_permalink', ( get_permalink($l->element_id)), $l->language_code) . '"><img class="wpml-ls-flag iclflag" src="' . $home_url . '/wp-content/plugins/sitepress-multilingual-cms/res/flags/' . $l->language_code .'.png" />' . '</a>';
                  }
          }
          echo join(' &nbsp; ', $langs);
          echo '</p>';
      }
    }

    function wpml_post_languages_in_loop_card() {
        $thispostid = get_the_ID();
        $post_trid = apply_filters('wpml_element_trid', NULL, get_the_ID(), 'post_' . get_post_type());
        $languages = apply_filters( 'wpml_active_languages', NULL, 'skip_missing=0&orderby=code' );
        if (empty($post_trid))
            return;
        $translation = apply_filters('wpml_get_element_translations', NULL, $post_trid, 'post_' . get_post_type());
        if (1 < count($translation)) {
          echo '<p class="vf-card__text" style="margin: 0px;">';
            foreach ($translation as $l) {
                if ($l->element_id != $thispostid) {
                    $langs[] = '<a class="vf-card__link" href="' . apply_filters('wpml_permalink', ( get_permalink($l->element_id)), $l->language_code) . '"><img class="wpml-ls-flag iclflag" src="'.$languages[$l->language_code]['country_flag_url'].'" />' . '</a>';
                    }
            }
            echo join(' &nbsp; ', $langs);
            echo '</p>';
        }
      }
    }



?>
