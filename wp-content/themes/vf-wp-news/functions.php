<?php
require_once('functions/embl-ebi-news.php');
require_once('functions/globals.php');
require_once('functions/gravatar.php');
require_once('functions/post-types.php');
require_once('functions/widgets.php');
require_once('functions/wpml-settings.php');

/* Adds scripts */
add_action( 'wp_enqueue_scripts', 'add_scripts' );
function add_scripts() {
    wp_enqueue_script('jplist', get_theme_file_uri( '/scripts/jplist.min.js'));
}
// Replacing factoid boxes in old articles

function factoid_function( $atts, $content = null ) {
$content = str_replace('<p', '<p class="vf-box__text"', $content);
$content = str_replace('<h2', '<h2 class="vf-box__heading"', $content);
    return '<div class="vf-box vf-box--normal vf-box-theme--primary">' .  $content . '</div>';
}

add_shortcode('fact-box', 'factoid_function');

// removes empty <p> in factoid box

add_filter('the_content', 'remove_empty_p', 20, 1);
function remove_empty_p($content){
    $content = force_balance_tags($content);
    return preg_replace('#<p>\s*+(<br\s*/*>)?\s*</p>#i', '', $content);
}

// Expose user email id in user api
// https://gitlab.ebi.ac.uk/emblorg/backlog/-/issues/585
register_rest_field( 'user', 'user_email',
    array(
        'get_callback'    => function ( $user ) {
            //return $user['email'];
         return get_userdata($user['id'])->user_email;
        },
        'update_callback' => null,
        'schema'          => null,
    )
);


// CHILD THEME CSS FILE

add_action( 'wp_enqueue_scripts', 'my_theme_enqueue_styles' );
function my_theme_enqueue_styles() {
	
	$parent_style = 'parent-style'; 
	
    wp_enqueue_style( $parent_style, get_template_directory_uri() . '/style.css' );
    wp_enqueue_style( 'child-style',
	get_stylesheet_directory_uri() . '/style.css',
	array( $parent_style ),
	wp_get_theme()->get('Version')
);
}

/**
 * Load ACF JSON from theme
 */
add_filter(
	'acf/settings/load_json',
	'vf_wp_news__acf_settings_load_json',
	1
  );

function vf_wp_news__acf_settings_load_json($paths) {
    $paths[] = get_stylesheet_directory() . '/acf-json';
    return $paths;
  }



// POST THUMBNAILS
// 
add_theme_support( 'post-thumbnails' );
add_theme_support( 'title-tag' );

// REMOVES CUSTOM IMAGE SIZES

function remove_extra_image_sizes() {
	foreach ( get_intermediate_image_sizes() as $size ) {
		if ( !in_array( $size, array( 'thumbnail', 'medium', 'medium_large', 'large' ) ) ) {
			remove_image_size( $size );
		}
	}
}
 
add_action('init', 'remove_extra_image_sizes');


//Adding vf-list__item class to a list generated by Wordpress

add_filter('wp_list_categories', 'add_vf_class_wp_list_categories');
function add_vf_class_wp_list_categories($list) {

    $cats = get_categories('hide_empty=0');
    foreach($cats as $cat) {
        $find = 'cat-item-' . $cat->term_id . '"';
        $replace = 'vf-list__item' . '"';
        $list = str_replace( $find, $replace, $list );
        $find = 'cat-item';
        $replace = 'vf-list__item' . '"';
        $list = str_replace( $find, $replace, $list );
    }

    return $list;
}

add_filter('wp_list_categories', 'addClassToLinks');
function addClassToLinks($content){
	$class_to_add = 'vf-list__link';

    return str_replace( '<a href="',  '<a class="'. $class_to_add. '" href="', $content);
}


// POPULAR POSTS 

function popular_posts($post_id) {
	$count_key = 'popular_posts';
	$count = get_post_meta($post_id, $count_key, true);
	if ($count == '') {
		$count = 0;
		delete_post_meta($post_id, $count_key);
		add_post_meta($post_id, $count_key, '0');
	} else {
		$count++;
		update_post_meta($post_id, $count_key, $count);
	}
}

function track_posts($post_id) {
	if (!is_single()) return;
	if (empty($post_id)) {
		global $post;
		$post_id = $post->ID;
	}
	popular_posts($post_id);
}
add_action('wp_head', 'track_posts');



//ADDING CLASS TO A LINK IN CATEGORY
//
function replace_category_class( $thelist, $separator, $parents){
    $class_to_add = 'vf-link';
    return str_replace('<a href="',  '<a class="'. $class_to_add. '"style="color: #707372;" href="', $thelist);
}

add_filter('the_category', __NAMESPACE__ . '\\replace_category_class',10,3);




// REMOVE LIST FROM CATEGORY

foreach((get_the_category()) as $category) { 
    echo $category->category_nicename . ' '; 
    echo get_category_link($category->cat_ID);;
} 

// DISPLAY CUSTOM FIELDS IN THE MENU

add_filter('acf/settings/remove_wp_meta_box', '__return_false');

add_filter('acf/settings/show_admin', '__return_true');
function my_acf_save_post( $post_id ) {
  // get new value
  $user = get_field( 'author', $post_id );
  if( $user ) {
    wp_update_post( array( 'ID'=>$post_id, 'post_author'=>$user['ID']) );
  }
}
add_action('acf/save_post', 'my_acf_save_post', 25);



// Remove Yoast SEO Prev/Next URL from all pages

add_filter( 'wpseo_next_rel_link', '__return_false' );
add_filter( 'wpseo_prev_rel_link', '__return_false' );

// Prepends WordPress RSS feed content with the featured image

add_filter('the_content', 'featured_image_in_rss_feed');
function featured_image_in_rss_feed( $content ) {
 global $post;
 if( is_feed() ) {
 if ( has_post_thumbnail( $post->ID ) ){
 $prepend = '<div>' . get_the_post_thumbnail( $post->ID, 'medium', array( 'style' => 'margin-bottom: 10px;' ) ) . '</div>';
 $content = $prepend . $content;
 }
 }
 return $content;
}



  
add_filter( 'get_archives_link', function( $link_html, $url, $text, $format, $before, $after ) {

    if ( 'custom' == $format ) {
        $link_html = "\t<option value=\"". esc_attr( $text ) ."\" data-path=\".a". esc_attr( $text ) ."\">$before $text $after</option>\n";
    }

    return $link_html;

}, 10, 6 );

// don't show fields for translations that are not used anaymore
function hide_acf_field($field) {
    return false;
  }
  add_filter("acf/prepare_field/name=translations", "hide_acf_field");
 
  /*
   * Add columns to posts post list
   */
  function add_acf_columns ( $columns ) {
      return array_merge ( $columns, array ( 
        'language' => __ ( 'Language' )
      ) );
    }
    add_filter ( 'manage_post_posts_columns', 'add_acf_columns' );
/*
 * Add columns to posts post list
 */
function posts_custom_column ( $column, $post_id ) {
    switch ( $column ) {
      case 'language':
        $field = get_field ( 'field_article_language', $post_id,  true );
        echo $field['label'];
        break;
    }
  }
  add_action ( 'manage_post_posts_custom_column', 'posts_custom_column', 10, 2 );


  function adjust_admin_style() {
    echo '<style>
      .fixed .column-categories,
      .fixed .column-language {
          width: 5%;
      }
      .fixed .column-date {
          width: 11%;
      }
    </style>';
  }
  add_action('admin_head', 'adjust_admin_style');
  

// custom post type custom URL
add_filter('post_type_link', 'event_permalink_structure', 10, 3);
function event_permalink_structure($post_link, $post, $leavename) {
    if (false !== strpos($post_link, '%issue%')) {
      $featured_posts = get_field( 'embletc_issue', $post->ID );
      if( $featured_posts ): 
        foreach( $featured_posts as $issueterm ): 
            $issue_term = get_the_title( $issueterm->ID );
            $issue_term = str_replace(' ', '-', $issue_term);
            $issue_term = strtolower( $issue_term);
      endforeach; 
      endif;         
      if (!empty($issue_term))
            $post_link = str_replace('%issue%', $issue_term, $post_link);
        else
            $post_link = str_replace('%issue%', '', $post_link);
    } 
    return $post_link;
}

?>
